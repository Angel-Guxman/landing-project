---
interface Props {
	redirectUrl: string;
}

const props = Astro.props as Props;


---

<form class="max-w-2xl mx-auto bg-zinc-900 p-6 rounded-lg shadow-lg">
	<div class="">
		<div class=" mb-2">
			<label for="nombre" class="block text-white  mb-2 w-fit font-medium"> Nombre <span class="text-red-500">*</span> </label>
			<input type="text" id="nombre" name="nombre" required class="w-full px-4 py-2 border border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-white" />
		</div>

		<div class=" mb-2">
			<label for="correo" class="block text-white font-medium mb-2 w-fit"> Email <span class="text-red-500">*</span></label>
			<input type="email" id="correo" name="correo" required class="w-full px-4 py-2 border border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-white" />
		</div>
		<div class=" mb-2">
			<label for="telefono" class="block text-white font-medium mb-2 w-fit"> Telefono <span class="text-red-500">*</span></label>
			<input type="number" id="telefono" name="telefono" required class="w-full px-4 py-2 border border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-white" />
		</div>
		<div class=" mb-2">
			<label for="edad" class="block text-white font-medium mb-2 w-fit"> Edad <span class="text-red-500">*</span></label>
			<input type="number" id="edad" name="edad" required class="w-full px-4 py-2 border border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-white" />
		</div>
		<div class=" mb-2">
			<label for="asunto" class="block text-white font-medium mb-2 w-fit"> Asunto <span class="text-red-500">*</span></label>
			<input type="text" id="asunto" name="asunto" required class="w-full px-4 py-2 border border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-white" />
		</div>
		<div>
			<label for="descripcion" class="block text-white font-medium mb-2 w-fit"> Mensaje <span class="text-red-500">*</span></label>
			<textarea id="descripcion" name="descripcion" rows="4" required class="w-full px-4 py-2 border border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-white resize-vertical"></textarea>
		</div>

		<button type="submit" id="submit-button" class=" w-full bg-indigo-500 text-white font-semibold py-2 px-6 mt-4 cursor-pointer hover:bg-indigo-600 rounded-md  transition-colors duration-300">
			Enviar
		</button>
	</div>
</form>

<script is:inline>
	const form = document.querySelector("form");
	const button = document.querySelector("#submit-button");

	form?.addEventListener("submit", async (e) => {
		e.preventDefault();

		const formData = new FormData(e.target);
		const data = Object.fromEntries(formData.entries());

		// Convertimos tipos
		data.edad = Number(data.edad);
		data.telefono = String(data.telefono);

		try {
			button?.classList.add("opacity-50");
			button.textContent = "Enviando...";
			button?.classList.add("cursor-not-allowed");
			const response = await fetch("https://qftkplcxrwkqbapiibxn.supabase.co/functions/v1/rapid-responder", {
				method: "POST",
				headers: {
					"Content-Type": "application/json",
				},
				body: JSON.stringify({
					nombre: data.nombre,
					correo: data.correo,
					telefono: data.telefono,
					edad: data.edad,
					asunto: data.asunto,
					descripcion: data.descripcion
				}),
			});

			if (!response.ok) {
				Toastify({
		text: "Ocurrió un error al enviar el formulario",
		duration: 4000,
		close: true,
		gravity: "top",
		position: "center",
		backgroundColor: "#ef4444",
	}).showToast();
				return;
			}
			form.reset();
			Toastify({
				text: "Formulario enviado correctamente.",
				duration: 3000,
				newWindow: true,
				close: true,
				gravity: "top", // `top` or `bottom`
				position: "center", // `left`, `center` or `right`
				stopOnFocus: true, // Prevents dismissing of toast on hover
				style: {
					background: "linear-gradient(to right, #00b09b, #96c93d)",
				},
				onClick: function () { }, // Callback after click
			}).showToast();

		} catch (error) {
			console.error(error);
			Toastify({
				text: "Ocurrió un error al enviar el formulario",
				duration: 4000,
				close: true,
				gravity: "top",
				position: "center",
				backgroundColor: "#ef4444",
			}).showToast();
		}finally{
			button?.classList.remove("opacity-50");
			button.textContent = "Enviar";
			button?.classList.remove("cursor-not-allowed");
		}
	});
</script>

